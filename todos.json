{"type":"begin","data":{"path":{"text":"pkg/telemetry/tracing.go"}}}
{"type":"match","data":{"path":{"text":"pkg/telemetry/tracing.go"},"lines":{"text":"// TODO: Implement OpenTelemetry for distributed tracing.\n"},"line_number":6,"absolute_offset":149,"submatches":[{"match":{"text":"TODO"},"start":3,"end":7}]}}
{"type":"end","data":{"path":{"text":"pkg/telemetry/tracing.go"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":17500,"human":"0.000017s"},"searches":1,"searches_with_match":1,"bytes_searched":495,"bytes_printed":314,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"pkg/telemetry/metrics.go"}}}
{"type":"match","data":{"path":{"text":"pkg/telemetry/metrics.go"},"lines":{"text":"// TODO: Implement Prometheus metrics for observability.\n"},"line_number":6,"absolute_offset":173,"submatches":[{"match":{"text":"TODO"},"start":3,"end":7}]}}
{"type":"end","data":{"path":{"text":"pkg/telemetry/metrics.go"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":4334,"human":"0.000004s"},"searches":1,"searches_with_match":1,"bytes_searched":537,"bytes_printed":313,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"scripts/services/lowkey.plist"}}}
{"type":"match","data":{"path":{"text":"scripts/services/lowkey.plist"},"lines":{"text":"    <!-- TODO: define ProgramArguments, RunAtLoad, and WorkingDirectory. -->\n"},"line_number":7,"absolute_offset":313,"submatches":[{"match":{"text":"TODO"},"start":9,"end":13}]}}
{"type":"end","data":{"path":{"text":"scripts/services/lowkey.plist"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":3375,"human":"0.000003s"},"searches":1,"searches_with_match":1,"bytes_searched":407,"bytes_printed":344,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"scripts/setup_project_tree.sh"}}}
{"type":"match","data":{"path":{"text":"scripts/setup_project_tree.sh"},"lines":{"text":"// are wired, replace the TODO below with a call to rootCmd.Execute().\n"},"line_number":53,"absolute_offset":1157,"submatches":[{"match":{"text":"TODO"},"start":26,"end":30}]}}
{"type":"match","data":{"path":{"text":"scripts/setup_project_tree.sh"},"lines":{"text":"    // TODO: invoke rootCmd.Execute() after defining commands in this package.\n"},"line_number":55,"absolute_offset":1242,"submatches":[{"match":{"text":"TODO"},"start":7,"end":11}]}}
{"type":"match","data":{"path":{"text":"scripts/setup_project_tree.sh"},"lines":{"text":"    <!-- TODO: define ProgramArguments, RunAtLoad, and WorkingDirectory. -->\n"},"line_number":344,"absolute_offset":10348,"submatches":[{"match":{"text":"TODO"},"start":9,"end":13}]}}
{"type":"end","data":{"path":{"text":"scripts/setup_project_tree.sh"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":6125,"human":"0.000006s"},"searches":1,"searches_with_match":1,"bytes_searched":13556,"bytes_printed":889,"matched_lines":3,"matches":3}}}
{"type":"begin","data":{"path":{"text":"TODO.md"}}}
{"type":"match","data":{"path":{"text":"TODO.md"},"lines":{"text":"# Project TODOs\n"},"line_number":1,"absolute_offset":0,"submatches":[{"match":{"text":"TODO"},"start":10,"end":14}]}}
{"type":"match","data":{"path":{"text":"TODO.md"},"lines":{"text":"This file lists all the `TODO` items found in the project, generated from the source code comments.\n"},"line_number":3,"absolute_offset":17,"submatches":[{"match":{"text":"TODO"},"start":25,"end":29}]}}
{"type":"end","data":{"path":{"text":"TODO.md"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":7875,"human":"0.000008s"},"searches":1,"searches_with_match":1,"bytes_searched":3163,"bytes_printed":509,"matched_lines":2,"matches":2}}}
{"type":"begin","data":{"path":{"text":"internal/state/persistence.go"}}}
{"type":"match","data":{"path":{"text":"internal/state/persistence.go"},"lines":{"text":"// TODO: Implement durable storage for the file signature cache.\n"},"line_number":6,"absolute_offset":158,"submatches":[{"match":{"text":"TODO"},"start":3,"end":7}]}}
{"type":"end","data":{"path":{"text":"internal/state/persistence.go"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":13625,"human":"0.000014s"},"searches":1,"searches_with_match":1,"bytes_searched":578,"bytes_printed":331,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"internal/state/cache.go"}}}
{"type":"match","data":{"path":{"text":"internal/state/cache.go"},"lines":{"text":"// TODO: Implement the file signature cache.\n"},"line_number":6,"absolute_offset":158,"submatches":[{"match":{"text":"TODO"},"start":3,"end":7}]}}
{"type":"end","data":{"path":{"text":"internal/state/cache.go"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":15875,"human":"0.000016s"},"searches":1,"searches_with_match":1,"bytes_searched":669,"bytes_printed":299,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"internal/events/fsnotify_unix.go"}}}
{"type":"match","data":{"path":{"text":"internal/events/fsnotify_unix.go"},"lines":{"text":"// TODO: Implement the fsnotify-based watcher for Unix-like systems (Linux, Darwin).\n"},"line_number":6,"absolute_offset":159,"submatches":[{"match":{"text":"TODO"},"start":3,"end":7}]}}
{"type":"end","data":{"path":{"text":"internal/events/fsnotify_unix.go"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":11375,"human":"0.000011s"},"searches":1,"searches_with_match":1,"bytes_searched":552,"bytes_printed":357,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"internal/watcher/hybrid_monitor.go"}}}
{"type":"match","data":{"path":{"text":"internal/watcher/hybrid_monitor.go"},"lines":{"text":"// TODO: Implement the hybrid monitoring algorithm.\n"},"line_number":6,"absolute_offset":186,"submatches":[{"match":{"text":"TODO"},"start":3,"end":7}]}}
{"type":"end","data":{"path":{"text":"internal/watcher/hybrid_monitor.go"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":32792,"human":"0.000033s"},"searches":1,"searches_with_match":1,"bytes_searched":764,"bytes_printed":328,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"internal/daemon/supervisor.go"}}}
{"type":"match","data":{"path":{"text":"internal/daemon/supervisor.go"},"lines":{"text":"// TODO: Implement the supervisor logic.\n"},"line_number":8,"absolute_offset":188,"submatches":[{"match":{"text":"TODO"},"start":3,"end":7}]}}
{"type":"end","data":{"path":{"text":"internal/daemon/supervisor.go"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":6792,"human":"0.000007s"},"searches":1,"searches_with_match":1,"bytes_searched":1113,"bytes_printed":307,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"internal/daemon/manager.go"}}}
{"type":"match","data":{"path":{"text":"internal/daemon/manager.go"},"lines":{"text":"\t// TODO: The controller.Start() call is currently a stub. This needs to be\n"},"line_number":75,"absolute_offset":1682,"submatches":[{"match":{"text":"TODO"},"start":4,"end":8}]}}
{"type":"end","data":{"path":{"text":"internal/daemon/manager.go"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":15916,"human":"0.000016s"},"searches":1,"searches_with_match":1,"bytes_searched":2999,"bytes_printed":339,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"internal/daemon/watch_manifest.go"}}}
{"type":"match","data":{"path":{"text":"internal/daemon/watch_manifest.go"},"lines":{"text":"// TODO: Implement the manifest reconciliation logic.\n"},"line_number":6,"absolute_offset":178,"submatches":[{"match":{"text":"TODO"},"start":3,"end":7}]}}
{"type":"end","data":{"path":{"text":"internal/daemon/watch_manifest.go"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":18208,"human":"0.000018s"},"searches":1,"searches_with_match":1,"bytes_searched":541,"bytes_printed":328,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"internal/events/fsnotify_windows.go"}}}
{"type":"match","data":{"path":{"text":"internal/events/fsnotify_windows.go"},"lines":{"text":"// TODO: Implement the fsnotify-based watcher for Windows.\n"},"line_number":6,"absolute_offset":168,"submatches":[{"match":{"text":"TODO"},"start":3,"end":7}]}}
{"type":"end","data":{"path":{"text":"internal/events/fsnotify_windows.go"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":9833,"human":"0.000010s"},"searches":1,"searches_with_match":1,"bytes_searched":524,"bytes_printed":337,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"internal/filters/ignore_tokens.go"}}}
{"type":"match","data":{"path":{"text":"internal/filters/ignore_tokens.go"},"lines":{"text":"// TODO: Implement the logic for extracting tokens from glob patterns and file paths.\n"},"line_number":6,"absolute_offset":171,"submatches":[{"match":{"text":"TODO"},"start":3,"end":7}]}}
{"type":"end","data":{"path":{"text":"internal/filters/ignore_tokens.go"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":6542,"human":"0.000007s"},"searches":1,"searches_with_match":1,"bytes_searched":656,"bytes_printed":360,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"internal/watcher/controller.go"}}}
{"type":"match","data":{"path":{"text":"internal/watcher/controller.go"},"lines":{"text":"\t// TODO: spawn event + polling goroutines; integrate filters and reporters.\n"},"line_number":60,"absolute_offset":1768,"submatches":[{"match":{"text":"TODO"},"start":4,"end":8}]}}
{"type":"end","data":{"path":{"text":"internal/watcher/controller.go"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":6917,"human":"0.000007s"},"searches":1,"searches_with_match":1,"bytes_searched":2532,"bytes_printed":348,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"internal/events/backend.go"}}}
{"type":"match","data":{"path":{"text":"internal/events/backend.go"},"lines":{"text":"// TODO: Implement a constructor `NewBackend()` that uses build tags or runtime\n"},"line_number":17,"absolute_offset":468,"submatches":[{"match":{"text":"TODO"},"start":3,"end":7}]}}
{"type":"end","data":{"path":{"text":"internal/events/backend.go"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":12834,"human":"0.000013s"},"searches":1,"searches_with_match":1,"bytes_searched":1111,"bytes_printed":341,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"internal/filters/bloom_filter.go"}}}
{"type":"match","data":{"path":{"text":"internal/filters/bloom_filter.go"},"lines":{"text":"// TODO: Implement the Bloom filter for efficient glob pattern matching.\n"},"line_number":6,"absolute_offset":183,"submatches":[{"match":{"text":"TODO"},"start":3,"end":7}]}}
{"type":"end","data":{"path":{"text":"internal/filters/bloom_filter.go"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":9583,"human":"0.000010s"},"searches":1,"searches_with_match":1,"bytes_searched":624,"bytes_printed":345,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"cmd/lowkey/watch.go"}}}
{"type":"match","data":{"path":{"text":"cmd/lowkey/watch.go"},"lines":{"text":"\t\t\t// TODO: Implement the foreground watching logic.\n"},"line_number":30,"absolute_offset":603,"submatches":[{"match":{"text":"TODO"},"start":6,"end":10}]}}
{"type":"end","data":{"path":{"text":"cmd/lowkey/watch.go"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":7458,"human":"0.000007s"},"searches":1,"searches_with_match":1,"bytes_searched":1190,"bytes_printed":304,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"docs/architecture/overview.md"}}}
{"type":"match","data":{"path":{"text":"docs/architecture/overview.md"},"lines":{"text":"TODO: This document should be updated as the application evolves. The stubs in the `internal` and `pkg` directories need to be implemented to realize this architecture fully.\n"},"line_number":34,"absolute_offset":1895,"submatches":[{"match":{"text":"TODO"},"start":0,"end":4}]}}
{"type":"end","data":{"path":{"text":"docs/architecture/overview.md"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":5750,"human":"0.000006s"},"searches":1,"searches_with_match":1,"bytes_searched":2070,"bytes_printed":443,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"cmd/lowkey/tail.go"}}}
{"type":"match","data":{"path":{"text":"cmd/lowkey/tail.go"},"lines":{"text":"\t\t\t// TODO: Implement the logic to stream live log entries.\n"},"line_number":10,"absolute_offset":223,"submatches":[{"match":{"text":"TODO"},"start":6,"end":10}]}}
{"type":"end","data":{"path":{"text":"cmd/lowkey/tail.go"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":9166,"human":"0.000009s"},"searches":1,"searches_with_match":1,"bytes_searched":663,"bytes_printed":309,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"cmd/lowkey/stop.go"}}}
{"type":"match","data":{"path":{"text":"cmd/lowkey/stop.go"},"lines":{"text":"\t\t\t// TODO: Implement the logic to find and signal the running daemon process to stop.\n"},"line_number":27,"absolute_offset":487,"submatches":[{"match":{"text":"TODO"},"start":6,"end":10}]}}
{"type":"end","data":{"path":{"text":"cmd/lowkey/stop.go"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":11000,"human":"0.000011s"},"searches":1,"searches_with_match":1,"bytes_searched":1010,"bytes_printed":336,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"cmd/lowkey/clear.go"}}}
{"type":"match","data":{"path":{"text":"cmd/lowkey/clear.go"},"lines":{"text":"\t\t\t// TODO: Implement the logic to prune logs and/or cached state.\n"},"line_number":10,"absolute_offset":224,"submatches":[{"match":{"text":"TODO"},"start":6,"end":10}]}}
{"type":"end","data":{"path":{"text":"cmd/lowkey/clear.go"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":3542,"human":"0.000004s"},"searches":1,"searches_with_match":1,"bytes_searched":699,"bytes_printed":318,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"cmd/lowkey/start.go"}}}
{"type":"match","data":{"path":{"text":"cmd/lowkey/start.go"},"lines":{"text":"\t\t\t// TODO: Implement the logic to launch the daemon process.\n"},"line_number":48,"absolute_offset":934,"submatches":[{"match":{"text":"TODO"},"start":6,"end":10}]}}
{"type":"end","data":{"path":{"text":"cmd/lowkey/start.go"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":6041,"human":"0.000006s"},"searches":1,"searches_with_match":1,"bytes_searched":2011,"bytes_printed":313,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"docs/eng-practices/review/reviewer/pushback.md"}}}
{"type":"match","data":{"path":{"text":"docs/eng-practices/review/reviewer/pushback.md"},"lines":{"text":"can optionally also write a TODO comment in the code that references the filed\n"},"line_number":62,"absolute_offset":3370,"submatches":[{"match":{"text":"TODO"},"start":28,"end":32}]}}
{"type":"end","data":{"path":{"text":"docs/eng-practices/review/reviewer/pushback.md"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":3917,"human":"0.000004s"},"searches":1,"searches_with_match":1,"bytes_searched":4369,"bytes_printed":383,"matched_lines":1,"matches":1}}}
{"type":"begin","data":{"path":{"text":"docs/eng-practices/review/reviewer/looking-for.md"}}}
{"type":"match","data":{"path":{"text":"docs/eng-practices/review/reviewer/looking-for.md"},"lines":{"text":"there is a TODO that can be removed now, a comment advising against this change\n"},"line_number":100,"absolute_offset":4750,"submatches":[{"match":{"text":"TODO"},"start":11,"end":15}]}}
{"type":"match","data":{"path":{"text":"docs/eng-practices/review/reviewer/looking-for.md"},"lines":{"text":"Either way, encourage the author to file a bug and add a TODO for cleaning up\n"},"line_number":140,"absolute_offset":6612,"submatches":[{"match":{"text":"TODO"},"start":57,"end":61}]}}
{"type":"end","data":{"path":{"text":"docs/eng-practices/review/reviewer/looking-for.md"},"binary_offset":null,"stats":{"elapsed":{"secs":0,"nanos":6375,"human":"0.000006s"},"searches":1,"searches_with_match":1,"bytes_searched":11330,"bytes_printed":686,"matched_lines":2,"matches":2}}}
{"data":{"elapsed_total":{"human":"0.005424s","nanos":5424500,"secs":0},"stats":{"bytes_printed":9481,"bytes_searched":54163,"elapsed":{"human":"0.000253s","nanos":252750,"secs":0},"matched_lines":29,"matches":29,"searches":25,"searches_with_match":25}},"type":"summary"}
